{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jg000\\\\react-test\\\\test.github.io\\\\component\\\\test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styles from '../styles/Home.module.scss';\nexport default function Test() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      step = _useState[0],\n      setStep = _useState[1];\n\n  var testObjArr = [{\n    \"question\": \"처음 보는 친구들에게 나는?\",\n    \"options\": [\"대부분 다른 친구가 먼저 말을 건낸다.\", \"내가 먼저 말을 건낸다.\"]\n  }, {\n    \"question\": \"주말에 난?\",\n    \"options\": [\"혼자 있는 게 싫지 않은 편이다.\", \"사람들과 만나는 것을 즐긴다.\"]\n  }, {\n    \"question\": \"친구들과 놀 때 나는?\",\n    \"options\": [\"왁자지껄한 신나는 분위기를 좋아한다.\", \"소수의 친구들과 소소하게 대화하는 것을 좋아한다.\"]\n  }];\n  var handleNextStep = useCallback(function (idx, subIdx) {\n    if (idx === testObjArr.length - 1) {\n      return;\n    } //옵션 저장 필요\n    //step 올리기\n\n\n    setStep(step + 1);\n  }, [step]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.test,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"step : \", step]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), testObjArr.map(function (item, idx) {\n      if (idx === step) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.question,\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: item.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.option,\n            children: item.options.map(function (option, subIdx) {\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: function onClick() {\n                  return handleNextStep(idx, subIdx);\n                },\n                children: option\n              }, subIdx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 45\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, _this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, _this);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progress,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progressBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: styles.questionCount,\n        children: [\" \", step + 1, \" / \", testObjArr.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"NAzl1/dESuUoBx2mT6zKHyZ67IQ=\");\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["C:/Users/jg000/react-test/test.github.io/component/test.js"],"names":["React","useState","useCallback","styles","Test","step","setStep","testObjArr","handleNextStep","idx","subIdx","length","test","map","item","question","option","options","progress","progressBar","questionCount"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAAA,kBAEHH,QAAQ,CAAC,CAAD,CAFL;AAAA,MAEpBI,IAFoB;AAAA,MAEdC,OAFc;;AAI3B,MAAMC,UAAU,GAAG,CACf;AACI,gBAAY,iBADhB;AAEI,eAAW,CACP,uBADO,EAEP,eAFO;AAFf,GADe,EAQf;AACI,gBAAY,QADhB;AAEI,eAAW,CACP,oBADO,EAEP,kBAFO;AAFf,GARe,EAef;AACI,gBAAY,cADhB;AAEI,eAAW,CACP,sBADO,EAEP,6BAFO;AAFf,GAfe,CAAnB;AAwBA,MAAMC,cAAc,GAAGN,WAAW,CAAC,UAACO,GAAD,EAAMC,MAAN,EAAiB;AAChD,QAAGD,GAAG,KAAKF,UAAU,CAACI,MAAX,GAAmB,CAA9B,EAAkC;AAC9B;AACH,KAH+C,CAKhD;AAEA;;;AACAL,IAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AAGH,GAXiC,EAW/B,CAACA,IAAD,CAX+B,CAAlC;AAaA,sBACI;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACS,IAAvB;AAAA,4BACI;AAAA,4BAAWP,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKE,UAAU,CAACM,GAAX,CAAe,UAACC,IAAD,EAAOL,GAAP,EACZ;AACI,UAAGA,GAAG,KAAKJ,IAAX,EAAiB;AACb,4BACI;AAAA,kCAEI;AAAK,YAAA,SAAS,EAAEF,MAAM,CAACY,QAAvB;AAAA,mCACI;AAAA,wBAAKD,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAMI;AAAK,YAAA,SAAS,EAAEZ,MAAM,CAACa,MAAvB;AAAA,sBAEQF,IAAI,CAACG,OAAL,CAAaJ,GAAb,CAAiB,UAACG,MAAD,EAASN,MAAT;AAAA,kCACb;AAAqB,gBAAA,OAAO,EAAE;AAAA,yBAAMF,cAAc,CAACC,GAAD,EAAMC,MAAN,CAApB;AAAA,iBAA9B;AAAA,0BAAkEM;AAAlE,iBAAaN,MAAb;AAAA;AAAA;AAAA;AAAA,uBADa;AAAA,aAAjB;AAFR;AAAA;AAAA;AAAA;AAAA,mBANJ;AAAA,WAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,iBADJ;AAgBH;AACJ,KApBJ,CAFL,eA0BI;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACe,QAAvB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEf,MAAM,CAACgB;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAI,QAAA,SAAS,EAAEhB,MAAM,CAACiB,aAAtB;AAAA,wBAAuCf,IAAI,GAAG,CAA9C,SAAoDE,UAAU,CAACI,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GA5EuBP,I;;KAAAA,I","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styles from '../styles/Home.module.scss'\r\n\r\n\r\nexport default function Test() {\r\n\r\n    const [step, setStep] = useState(0)\r\n\r\n    const testObjArr = [\r\n        {\r\n            \"question\": \"처음 보는 친구들에게 나는?\",\r\n            \"options\": [\r\n                \"대부분 다른 친구가 먼저 말을 건낸다.\",\r\n                \"내가 먼저 말을 건낸다.\"\r\n            ]\r\n        },\r\n        {\r\n            \"question\": \"주말에 난?\",\r\n            \"options\": [\r\n                \"혼자 있는 게 싫지 않은 편이다.\",\r\n                \"사람들과 만나는 것을 즐긴다.\"\r\n            ]\r\n        },\r\n        {\r\n            \"question\": \"친구들과 놀 때 나는?\",\r\n            \"options\": [\r\n                \"왁자지껄한 신나는 분위기를 좋아한다.\",\r\n                \"소수의 친구들과 소소하게 대화하는 것을 좋아한다.\"\r\n            ]\r\n        }\r\n    ]\r\n\r\n    const handleNextStep = useCallback((idx, subIdx) => {\r\n        if(idx === testObjArr.length -1 ) {\r\n            return\r\n        }\r\n        \r\n        //옵션 저장 필요\r\n        \r\n        //step 올리기\r\n        setStep(step+1)\r\n\r\n        \r\n    }, [step])\r\n\r\n    return (\r\n        <div className={styles.test}>\r\n            <p>step : {step}</p>\r\n            {testObjArr.map((item, idx) => \r\n                {\r\n                    if(idx === step) {\r\n                        return (\r\n                            <div key={idx}>\r\n                                {/* question */}\r\n                                <div className={styles.question}>\r\n                                    <h5>{item.question}</h5>\r\n                                </div>\r\n                                {/* options */}\r\n                                <div className={styles.option}>\r\n                                    {\r\n                                        item.options.map((option, subIdx) => (\r\n                                            <button key={subIdx} onClick={() => handleNextStep(idx, subIdx)}>{option}</button>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            )}\r\n    \r\n            {/* question-progress */}\r\n            <div className={styles.progress}>\r\n                <div className={styles.progressBar}>\r\n                </div>\r\n                <h5 className={styles.questionCount}> {step + 1} / {testObjArr.length} </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}